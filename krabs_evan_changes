#define BLYNK_PRINT Serial
#define BLYNK_TEMPLATE_ID "TMPLYJCXsPjX"
#define BLYNK_DEVICE_NAME "EkrabsCopy"
char auth[] = "cxPTexdXnwnBuuf7ZxoGTqNtv1CGkG66"; //Authentication Token

#include <BlynkSimpleEsp32.h>

#include <ESP32Servo.h>
#include "Value_settings.h"
#include "Servo_settings.h"
#include "Functions.h"

void setup()
{
  Serial.begin(115200);
  //Blynk.begin(auth, "Retsamina", "a1ni2mas3ter48");//Set SSID and Password
  Blynk.begin(auth, "SUN", "san0591gou");//Set SSID and Password
  myServo[0].attach(servo1);
  myServo[1].attach(servo2);
  myServo[0].write(x[k]);
  myServo[1].write(y[k]);
  myServo[2].attach(servo3);
  myServo[3].attach(servo4);
  myServo[2].write(x[k]);
  myServo[3].write(y[k]);
  timer1.setInterval(30, Servowrite);
  timer1.setInterval(30, switchServos);
}

//Blynk code for servo movement
BLYNK_WRITE(V0) { 
  up = param.asInt();
}

BLYNK_WRITE(V1) { 
  down = param.asInt(); 
}

BLYNK_WRITE(V2) { 
  left = param.asInt(); 
}

BLYNK_WRITE(V3) { 
  right = param.asInt();
}

//Blynk code for storing positions
BLYNK_WRITE(V20){ 
  //int value = param.asInt();
  if (!lock){
        for (int j=0; j != servoSelectSlider; j++){ //new store position idea Evan
      storePos(j*5); //new store position idea Evan
      
    }
  }
}
BLYNK_WRITE(V21){
  int value = param.asInt();
  
  if (!lock){
    for (int j=0; j != servoSelectSlider; j++){ //new store position idea Evan
      storePos(j*7); //new store position idea Evan
      
    }
  }

  //if the else if doesn't work then use code below that is commentated
  //else {
    //Blynk.virtualWrite(V21,0); //prevents flash of the button when pressed
  //}
}
BLYNK_WRITE(V22){
  //int value = param.asInt();
  if (!lock){
    for (int j=0; j != servoSelectSlider; j++){ //new store position idea Evan
      storePos(j*11); //new store position idea Evan
      
    }
  }
}
BLYNK_WRITE(V23){
  //int value = param.asInt();
  if (!lock){
    for (int j=0; j != servoSelectSlider; j++){ //new store position idea Evan
      storePos(j*13); //new store position idea Evan
      
    }
  }
}
BLYNK_WRITE(V10){
  int value = param.asInt();
  if (value){
    setPosition(A[i],A[i+1]);
  }
}
BLYNK_WRITE(V11){
  int value = param.asInt();
  if (value){
    setPosition(B[i],B[i+1]);
  }
}
BLYNK_WRITE(V12){
  int value = param.asInt();
  if (value){
    setPosition(C[i],C[i+1]);
  }
}
BLYNK_WRITE(V13){
  int value = param.asInt();
  if (value){
    setPosition(D[i],D[i+1]);
  }
}

BLYNK_WRITE(V100){
  stepAngle = param.asInt();
}

BLYNK_WRITE(V101){
  p_to_p_speed = param.asInt();
}

BLYNK_WRITE(V5){
  //lock = param.asInt();
  if (param.asInt() == 1){ //if lock is cliked Evan
     lock = true; //then turn on all locks
    }
  else{
    lock = false; // remove all locks
    }
}

//Blynk code to reset to original position
BLYNK_WRITE (V6){
  reset = param.asInt();
}

BLYNK_WRITE (V7){
  servoSelectSlider = param.asInt();
}
BLYNK_WRITE (V8) { //for now change to 8 later, this is in the reset, will be seperate in final point. Reset the store positions Evan
  resetPresets = param.asInt();
}

void loop()
{
  Blynk.run();
  timer1.run();
  timer2.run();
  if (lock){ //if button is locked Evan
    Blynk.virtualWrite(V20,1); //shows that the button is locked Evan
    Blynk.virtualWrite(V21,1);  //shows that the button is locked Evan
    Blynk.virtualWrite(V22,1); //shows that the button is locked Evan
    Blynk.virtualWrite(V23,1);  //shows that the button is locked Evan
  }
  else{ //if button is not locked
    Blynk.virtualWrite(V20,0); //Shows button is not locked Evan
    Blynk.virtualWrite(V21,0); //Shows button is not locked Evan
    Blynk.virtualWrite(V22,0); //Shows button is not locked Evan
    Blynk.virtualWrite(V23,0); //Shows button is not locked Evan
    }
}
